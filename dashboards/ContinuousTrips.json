{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "definition": "TeslaMate|U2FsdGVkX1/cEWK+8cz7pjEKXtzJnDN7b21ZDXt1MGneFGPWTLqOPtxKmu02mJPLzi/f29I+NBHd3vi0FB8R4Xn0+GtobWDgk6VAVSBTdSNniOKO8i2WPlhRaOsl2+hG7gnZ7wrf1Th2nxR7f1uYCrbwOek0IzkfLzrkjh7gkr6inT6bbDuJqrmogZajLxmAMrQ6V+/vHxBRGiwjJhgiEeq3hM1q2h04JKkNiZ8RHbsF5Cd/xd8Q9u0JVrZzIrtnhM/SFlaApU7RtRMu8CSj1llTX7WEOj6VDZAMSf+XUAanWdk725kEPN9MNu89o2zEq5P3E3cju8IbbBdPzXLV3oVuzD6/tMnxFToIIV1E/BrpF7s2RtNa8+KJJ1PF8xgs6m+/KTD2hy+WsP0636AgObRAmYg7+qotGrgNvpNPdE0EgrB7WHYlV7R/1q66bcq6tCe51X1Un70k+zo+K6AK0o4B1H6IyMlEVuRH/Fz8QVl9aYu2ztd08RbuKJlYVKpkH+pxVETAO9MclYQ90tzE6TfwDZrQZzsAlMenr4s1ZB1OlFXjLjVjnddnUilzO76cqv4yI2THQEuyQ47nuVQ4gUbx02K59vMQhns3C01JOAYokOaSXe66Y7QYdMlk09Lf|aes-256-cbc",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [
    {
      "icon": "dashboard",
      "tags": [],
      "title": "TeslaMate",
      "tooltip": "",
      "type": "link",
      "url": "${base_url:raw}"
    },
    {
      "asDropdown": true,
      "icon": "external link",
      "tags": [
        "tesla"
      ],
      "title": "Dashboards",
      "type": "dashboards"
    },
    {
      "asDropdown": true,
      "icon": "external link",
      "includeVars": false,
      "keepTime": false,
      "tags": [
        "TeslamateCustomDashboards"
      ],
      "targetBlank": false,
      "title": "Custom Dashboards",
      "tooltip": "",
      "type": "dashboards",
      "url": ""
    }
  ],
  "panels": [
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "TeslaMate"
      },
      "description": "This dashboard has a table with all the trips you've made between charges sessions, so you can browse the longest or shortest mileage you travel.\n\nYou may also take a look to a specific trip from the initial charge session (before the trip) to the end of the of the charge session (after the trip), through the link in the first column that will take you to the Trips dashboard.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "filterable": false,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "start_date"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Start Date"
              },
              {
                "id": "unit",
                "value": "dateTimeAsLocal"
              },
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "View Trip details",
                    "url": "d/FkUpJpQZk?from=${__data.fields.start_date_ts.numeric}&to=${__data.fields.end_date_ts.numeric}"
                  }
                ]
              },
              {
                "id": "custom.minWidth",
                "value": 180
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "distance_km"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Distance"
              },
              {
                "id": "unit",
                "value": "lengthkm"
              },
              {
                "id": "decimals",
                "value": 0
              },
              {
                "id": "custom.minWidth",
                "value": 200
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "gradient",
                  "type": "gauge"
                }
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-BlPu"
                }
              },
              {
                "id": "max",
                "value": 400
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "distance_mi"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Distance"
              },
              {
                "id": "unit",
                "value": "lengthmi"
              },
              {
                "id": "decimals",
                "value": 0
              },
              {
                "id": "custom.minWidth",
                "value": 200
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "gauge"
                }
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-BlPu"
                }
              },
              {
                "id": "max",
                "value": 400
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "end_date"
            },
            "properties": [
              {
                "id": "custom.minWidth",
                "value": 180
              },
              {
                "id": "displayName",
                "value": "End Date"
              },
              {
                "id": "unit",
                "value": "dateTimeAsLocal"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "duration_s"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Duration"
              },
              {
                "id": "unit",
                "value": "clocks"
              },
              {
                "id": "custom.minWidth",
                "value": 120
              },
              {
                "id": "decimals",
                "value": 1
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "speed_km"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Ø Speed"
              },
              {
                "id": "custom.minWidth",
                "value": 110
              },
              {
                "id": "unit",
                "value": "velocitykmh"
              },
              {
                "id": "decimals",
                "value": 0
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "green",
                      "value": 0
                    },
                    {
                      "color": "red",
                      "value": 50
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "speed_mi"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Ø Speed"
              },
              {
                "id": "custom.minWidth",
                "value": 110
              },
              {
                "id": "unit",
                "value": "velocitymph"
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*_ts/"
            },
            "properties": [
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "decimals",
                "value": 2
              },
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/%/"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "decimals",
                "value": 0
              },
              {
                "id": "custom.minWidth",
                "value": 75
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "avg_temp_c"
            },
            "properties": [
              {
                "id": "unit",
                "value": "celsius"
              },
              {
                "id": "displayName",
                "value": "Temp"
              },
              {
                "id": "custom.minWidth",
                "value": 75
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "consumption_wh_per_km_gross"
            },
            "properties": [
              {
                "id": "unit",
                "value": "Wh/km"
              },
              {
                "id": "custom.minWidth",
                "value": 180
              },
              {
                "id": "displayName",
                "value": "Ø Consumption (gross)"
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "consumption_kwh"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Energy consumed (gross)"
              },
              {
                "id": "decimals",
                "value": 0
              },
              {
                "id": "custom.minWidth",
                "value": 196
              },
              {
                "id": "unit",
                "value": "kwatth"
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "gradient",
                  "type": "gauge"
                }
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-GrYlRd"
                }
              },
              {
                "id": "max",
                "value": 70
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "efficiency"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Full Efficiency"
              },
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "decimals",
                "value": 0
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "gauge"
                }
              },
              {
                "id": "custom.minWidth",
                "value": 120
              },
              {
                "id": "max",
                "value": 1
              },
              {
                "id": "min",
                "value": 0
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-RdYlGr"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "% Start"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 112
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "consumption_wh_per_km_net"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Ø Consumption (net)"
              },
              {
                "id": "unit",
                "value": "Wh/km"
              },
              {
                "id": "decimals",
                "value": 0
              },
              {
                "id": "custom.minWidth",
                "value": 180
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 30,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "11.5.2",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "TeslaMate"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH car_efficiency AS (\r\n    SELECT id, efficiency \r\n    FROM cars \r\n    WHERE id = $car_id\r\n),\r\n\r\n\r\ncp AS (\r\n    SELECT \r\n        car_id, \r\n        start_date, \r\n        end_date, \r\n        COALESCE(LEAD(start_date) OVER (PARTITION BY car_id ORDER BY start_date), now()) AS next_date,\r\n        end_battery_level,\r\n        LEAD(start_battery_level) OVER (PARTITION BY car_id ORDER BY start_date) AS next_start_battery_level\r\n    FROM charging_processes \r\n    WHERE $__timeFilter(start_date) \r\n      AND car_id = $car_id\r\n),\r\n\r\n\r\ntrip_net AS (\r\n    SELECT \r\n        cp.car_id,\r\n        cp.start_date,\r\n        cp.next_date AS end_date, \r\n        SUM(d.distance) AS distance_km,\r\n        SUM(d.duration_min) AS duration_min,\r\n        AVG(d.outside_temp_avg) AS avg_temp_C,\r\n        SUM(d.start_ideal_range_km - d.end_ideal_range_km) AS range_drop_km_net,\r\n        SUM(d.start_ideal_range_km - d.end_ideal_range_km) * (SELECT efficiency FROM car_efficiency) AS consumption_total_kWh_net\r\n    FROM cp\r\n    LEFT JOIN drives d \r\n        ON d.car_id = cp.car_id \r\n       AND d.start_date >= cp.end_date \r\n       AND d.end_date <= cp.next_date\r\n       AND d.end_date IS NOT NULL\r\n       AND d.duration_min > 0\r\n    GROUP BY cp.car_id, cp.start_date, cp.next_date\r\n),\r\n\r\n\r\nevents_all AS (\r\n    SELECT 'drive_start' AS event, start_date AS date, start_ideal_range_km AS range, start_km AS odometer, car_id\r\n    FROM drives\r\n    WHERE car_id = $car_id AND $__timeFilter(start_date)\r\n\r\n    UNION ALL\r\n    SELECT 'drive_end', end_date, end_ideal_range_km, end_km, car_id\r\n    FROM drives\r\n    WHERE car_id = $car_id AND $__timeFilter(end_date)\r\n\r\n    UNION ALL\r\n    SELECT 'charging_process_start', cp.start_date, p.ideal_battery_range_km, p.odometer, cp.car_id\r\n    FROM charging_processes cp\r\n    INNER JOIN positions p ON cp.position_id = p.id\r\n    WHERE cp.car_id = $car_id AND $__timeFilter(cp.start_date)\r\n\r\n    UNION ALL\r\n    SELECT 'charging_process_end', cp.end_date, p.ideal_battery_range_km, p.odometer, cp.car_id\r\n    FROM charging_processes cp\r\n    INNER JOIN positions p ON cp.position_id = p.id\r\n    WHERE cp.car_id = $car_id AND $__timeFilter(cp.end_date)\r\n\r\n    UNION ALL\r\n    SELECT 'position', date, ideal_battery_range_km, odometer, car_id\r\n    FROM positions\r\n    WHERE ideal_battery_range_km IS NOT NULL AND car_id = $car_id AND $__timeFilter(date)\r\n),\r\n\r\n\r\nevents_no_charging AS (\r\n    SELECT e.*\r\n    FROM events_all e\r\n    LEFT JOIN charging_processes c\r\n      ON e.car_id = c.car_id\r\n     AND e.date >= c.start_date\r\n     AND e.date <= c.end_date\r\n    WHERE c.start_date IS NULL\r\n),\r\n\r\n\r\nevents_marked AS (\r\n    SELECT\r\n        e.*,\r\n        LEAD(e.range) OVER (PARTITION BY e.car_id ORDER BY e.date) AS next_range\r\n    FROM events_no_charging e\r\n),\r\n\r\nevents_with_loss AS (\r\n    SELECT\r\n        car_id,\r\n        date,\r\n        odometer,\r\n        range,\r\n        next_range,\r\n        CASE \r\n            WHEN event = 'drive_start' THEN range - next_range\r\n            ELSE GREATEST(range - next_range, 0)\r\n        END AS range_loss\r\n    FROM events_marked\r\n    WHERE next_range IS NOT NULL\r\n),\r\n\r\n\r\ngross_by_cycle AS (\r\n    SELECT\r\n        cp.car_id,\r\n        cp.start_date,\r\n        cp.next_date AS end_date,\r\n        SUM(ev.range_loss) AS total_range_loss_gross,\r\n        SUM(ev.range_loss) * (SELECT efficiency FROM car_efficiency) AS consumption_total_kWh_gross\r\n    FROM cp\r\n    LEFT JOIN events_with_loss ev\r\n      ON ev.car_id = cp.car_id\r\n     AND ev.date >= cp.end_date\r\n     AND ev.date <= cp.next_date\r\n    GROUP BY cp.car_id, cp.start_date, cp.next_date\r\n),\r\n\r\nlatest_position AS (\r\n    SELECT car_id, usable_battery_level\r\n    FROM positions\r\n    WHERE car_id = $car_id AND $__timeFilter(date)\r\n    ORDER BY date DESC\r\n    LIMIT 1\r\n)\r\n\r\nSELECT\r\n    ROUND(EXTRACT(epoch FROM n.start_date) - 10) * 1000 AS start_date_ts, \r\n    ROUND(EXTRACT(epoch FROM n.end_date) + 10) * 1000 AS end_date_ts,\r\n    n.start_date,\r\n    n.end_date,\r\n    n.distance_km,\r\n    n.duration_min * 60 AS duration_s,\r\n    cp.end_battery_level AS \"Start %\",\r\n    COALESCE(cp.next_start_battery_level, lp.usable_battery_level) AS \"End %\",\r\n    (n.distance_km / NULLIF(n.duration_min, 0) * 60) AS speed_$length_unit,\r\n    n.avg_temp_C,\r\n    g.consumption_total_kWh_gross AS consumption_kwh,\r\n    (n.consumption_total_kWh_net * 1000 / NULLIF(n.distance_km, 0)) AS consumption_Wh_per_km_net,\r\n    (g.consumption_total_kWh_gross * 1000 / NULLIF(n.distance_km, 0)) AS consumption_Wh_per_km_gross,\r\n    (n.distance_km / nullif(total_range_loss_gross, 0)) as efficiency\r\nFROM trip_net n\r\nLEFT JOIN gross_by_cycle g \r\n  ON n.car_id = g.car_id\r\n AND n.start_date = g.start_date\r\nLEFT JOIN cp\r\n  ON n.car_id = cp.car_id\r\n AND n.start_date = cp.start_date\r\nLEFT JOIN latest_position lp\r\n  ON n.car_id = lp.car_id\r\nORDER BY n.start_date DESC;\r\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Long Trips",
      "type": "table"
    }
  ],
  "preload": false,
  "refresh": "",
  "schemaVersion": 40,
  "tags": [
    "TeslamateCustomDashboards"
  ],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "TeslaMate"
        },
        "definition": "SELECT\n    id as __value,\n    CASE WHEN COUNT(id) OVER (PARTITION BY name) > 1 AND name IS NOT NULL THEN CONCAT(name, ' - ', RIGHT(vin, 6)) ELSE COALESCE(name, CONCAT('VIN ', vin)) end as __text \nFROM cars\nORDER BY display_priority ASC, name ASC, vin ASC",
        "includeAll": false,
        "label": "Car",
        "name": "car_id",
        "options": [],
        "query": "SELECT\n    id as __value,\n    CASE WHEN COUNT(id) OVER (PARTITION BY name) > 1 AND name IS NOT NULL THEN CONCAT(name, ' - ', RIGHT(vin, 6)) ELSE COALESCE(name, CONCAT('VIN ', vin)) end as __text \nFROM cars\nORDER BY display_priority ASC, name ASC, vin ASC",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "TeslaMate"
        },
        "definition": "SELECT unit_of_length FROM settings limit 1",
        "hide": 2,
        "includeAll": false,
        "label": "length unit",
        "name": "length_unit",
        "options": [],
        "query": "SELECT unit_of_length FROM settings limit 1",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "TeslaMate"
        },
        "definition": "SELECT base_url FROM settings LIMIT 1",
        "hide": 2,
        "includeAll": false,
        "name": "base_url",
        "options": [],
        "query": "SELECT base_url FROM settings LIMIT 1",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "TeslaMate"
        },
        "definition": "SELECT preferred_range FROM settings LIMIT 1",
        "hide": 2,
        "includeAll": false,
        "name": "preferred_range",
        "options": [],
        "query": "SELECT preferred_range FROM settings LIMIT 1",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "TeslaMate"
        },
        "definition": "SELECT unit_of_temperature FROM settings LIMIT 1",
        "hide": 2,
        "includeAll": false,
        "name": "temp_unit",
        "options": [],
        "query": "SELECT unit_of_temperature FROM settings LIMIT 1",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "0",
          "value": "0"
        },
        "label": "Distance >=",
        "name": "min_dist",
        "options": [
          {
            "selected": true,
            "text": "0",
            "value": "0"
          }
        ],
        "query": "0",
        "type": "textbox"
      },
      {
        "current": {
          "text": "0",
          "value": "0"
        },
        "label": "Avg Speed >=",
        "name": "min_avg_speed",
        "options": [
          {
            "selected": true,
            "text": "0",
            "value": "0"
          }
        ],
        "query": "0",
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-1M",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Continuous Trips",
  "uid": "jchmY8upc6ZRk",
  "version": 1,
  "weekStart": ""
}
